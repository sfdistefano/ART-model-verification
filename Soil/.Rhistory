# removing left over white spaces
art.psc$Reclamation <- rm_white(art.psc$Reclamation)
# splitting df by Site so that ART plot pairs can be compared
art.split <- split(art.psc, art.psc$Reclamation)
# splitting df by reclamation so that ART plot pairs can be compared
art.split <- as.data.frame(split(art.psc, art.psc$Reclamation))
View(art.split)
unlist(art.split)
test <- unlist(art.split)
art.split[[1]]
art.split[[10]]
art.split[1]
rm(test)
# splitting df by Reclamation so that ART plot pairs can be compared
art.split <- split(art.psc, art.psc$Reclamation)
art.split[[1]]
gsub(pattern = "*Plot",
replacement = "",
x = art.psc$art.plot)
gsub(pattern = "*.Plot",
replacement = "",
x = art.psc$art.plot)
gsub(pattern != "Plot 1|Plot 2",
replacement = "",
x = art.psc$art.plot)
gsub(pattern = ".*Plot",
replacement = "",
x = art.psc$art.plot)
# agreement table between ART plots and their reference based on psc
table(x = psc.tot[c("art.psc", "ref.psc")])
View(psc.tot)
#### COMPARING ART PLOT to REFERENCE ####
# merging reference particle size class data with that of ART plots
# so that they can be compared
psc.tot <- merge(art.psc, ref.psc, by = "Site")[,c("Site", "art.plot", "art.clay",
"art.bedrock", "art.rock","art.psc",
"Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")]
# agreement table between ART plots and their reference based on psc
table(x = psc.tot[c("art.psc", "ref.psc")])
write.csv(psc, "psc.comparison.csv")
art.depth <- read.csv("ART.plot.depth.csv")
# field measurements: rock fragment%, horizon depths
art.field <- read.csv("ART.soil.field.csv")
# particle size analysis: sand%, clay%, silt%
art.psa <- read.csv("ART.soil.PSA.csv")
# combining site name and plot number into one column called "Plot"
art.psa <- unite(art.psa, col="Plot", 1:2, sep=" ")
# renaming columns so that particle size %s are capitalized (required format for later function)
colnames(art.psa) <- c("Plot", "Horizon", "sample.wt.g", "SAND", "CLAY", "SILT")
#### CALCULATING CLAY by WEIGHT ####
# removing white space so that the data aggregates to the correct number of plots
art.psa$Plot <- rm_white(art.psa$Plot)
# summing all the sample weights (g) from each horizon into a total sample weight from each soil pit
total.samp.wt <- aggregate(data = art.psa, sample.wt.g ~ Plot, sum)
# renaming columns to not mix them up later
colnames(total.samp.wt) <- c("Plot", "total.samp.wt")
# adding total weight to the dataset to later calculate clay by weight %
art.psa <- merge(art.psa, total.samp.wt, by = "Plot")
# weighting clay %s for each horizon by their depth (cm) within the soil pit
art.psa$samp.wt.clay <- (art.psa$sample.wt.g * art.psa$CLAY)/art.psa$total.samp.wt
# renaming Plot names so I don't have multiples on one plot when data is aggregated
art.psa$Plot <- gsub(pattern = "Fed 30-16", replacement = "Federal 30-16", x = art.psa$Plot)
# summing the clay %s of each horizon within a plot
total.clay.wt <- aggregate(data = art.psa, samp.wt.clay ~ Plot, sum)
colnames(total.clay.wt) <- c("Plot", "total.clay.wt")
#### CALCULTING SAND % BY WEIGHT ####
# weighting clay %s for each horizon by their depth (cm) within the soil pit
art.psa$samp.wt.sand <- (art.psa$sample.wt.g * art.psa$SAND)/art.psa$total.samp.wt
# summing the clay %s of each horizon within a plot
total.sand.wt <- aggregate(data = art.psa, samp.wt.sand ~ Plot, sum)
colnames(total.sand.wt) <- c("Plot", "total.sand.wt")
#### CALCULATING ROCK % by VOLUME ####
# removing text within Plot names to prepare for merging later
art.field$Plot <- gsub(pattern = "FR|Well Pad", replacement = "", x = art.field$Plot)
# renaming one plot name so it matches others
art.field$Plot <- gsub(pattern = "Fed 30-16", replacement = "Federal 30-16", x = art.field$Plot)
art.psa$Plot <- gsub(pattern = "Fed 30-16", replacement = "Federal 30-16", x = art.psa$Plot)
# previous removal of text leaves extra white space, getting rid of said white space
art.field$Plot <- rm_white(art.field$Plot)
art.psa$Plot <- rm_white(art.psa$Plot)
# adding soil pit depth from field data
art.soil <- merge(art.psa, art.field, by = c("Plot", "Horizon"))
# removing unnecessary characters from plot names
art.depth$Plot <- gsub(pattern = "FR|Well Pad", replacement = "", x = art.depth$Plot)
# removing additional white space
art.depth$Plot <- rm_white(art.depth$Plot)
# combining all info needed to calculate rock % by volume
art.final <- merge(art.soil, art.depth, by = c("Site", "Plot"))
# renaming column so that it's shorter and less confusing
names(art.final)[names(art.final) == 'Total.Rock.Fragments..vol.'] <- 'hor.rock'
# calculating total (cm) depth of horizons
art.final$hor.depth <- (art.final$Lower.Depth - art.final$Upper.Depth)
# weighting rock % by how much space it took up in the pit
art.final$hor.rock.vol <- (art.final$hor.rock * art.final$hor.depth)/art.final$Total.Soil.Pedon.Depth
# summing all rock %s from all horizons in each plot
total.rock.vol <- aggregate(data = art.final, hor.rock.vol ~ Plot, sum)
# renaming columns to make less confusing
colnames(total.rock.vol) <- c("Plot", "tot.rock.vol")
#### FINAL DATASET for PSC CALCULATION ####
psc <- merge(total.clay.wt, total.rock.vol, by = "Plot")
View(art.field)
View(art.final)
save.image("C:/Users/sfper/Dropbox/DiStefano_WRFO_project/WRFO_R/Soil/psc.calc.RData")
write.csv(psc, "psc.comparison.csv")
write.csv(psc.tot, "psc.comparison.csv")
# importing file
# particle size class determinations that were made manually in excel
# based on criteria from  "Keys to Soil Taxonomy"
art.psc <- read.csv("psc.calc.csv")
ref.psc <- read.csv("ref.soil.field_and_PSC.csv")
#### CLEANING DATA ####
# adding site column from cleaned Plot names to art data so that art data
# can later be compared to their reference
art.psc$Site <- gsub(pattern = "Plot 1|Plot 2",
x = art.psc$Plot,
replacement = "")
# removing left over white space from previous phrase removal
art.psc$Site <- rm_white(art.psc$Site)
# renaming columns so that there will only be 11 site names
# (the actual number of references)
art.psc$Site <- gsub(pattern = "A-30-3-101S Rd",
replacement = "A-30-3-101S",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "SDC 7326 Rd",
replacement = "SDC 7326",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "Cath Fed 30 01 Rd",
replacement = "Cath Fed 30 01",
x = art.psc$Site)
# cleaning up Site names so that they can be correctly merged with their ART plots
ref.psc$Site <- gsub(pattern = "[()]|D25 1103|L19 2101|FR",
replacement = "",
x = ref.psc$Site)
# removing extra white space from cleaned site names
ref.psc$Site <- rm_white(ref.psc$Site)
# renaminb columns so it's not confusing after merge
colnames(ref.psc) <- c("Site", "Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")
colnames(art.psc) <- c("X", "art.plot", "art.rock","art.clay", "art.bedrock",
"art.sand", "art.psc", "Site")
#### COMPARING ART PLOT to REFERENCE ####
# merging reference particle size class data with that of ART plots
# so that they can be compared
psc.tot <- merge(art.psc, ref.psc, by = "Site")[,c("Site", "art.plot", "art.clay",
"art.bedrock", "art.rock","art.psc",
"Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")]
write.csv(psc.tot, "psc.comparison.csv")
test.psc <- art.psc
test.psc <- art.psc[,c("Site", "Plot", "art.psc")]
test.psc <- art.psc[,c("Site", "art.plot", "art.psc")]
View(test.psc)
gsub(".*Plot", "", test.psc$art.plot)
gsub("^.Plot", "", test.psc$art.plot)
gsub("^.*?Plot", "", test.psc$art.plot)
gsub("*Plot", "", test.psc$art.plot)
gsub("^*Plot", "", test.psc$art.plot)
gsub(".*Plot", "", test.psc$art.plot)
test.psc$plot.num <-gsub(".*Plot", "", test.psc$art.plot)
gather(test.psc, by = "plot.num")
test.psc1 <- test.psc[, test.psc$plot.num == 1]
test.psc$plot.num <- rm_white(test.psc$plot.num)
test.psc1 <- test.psc[, test.psc$plot.num == 1]
test.psc1 <- test.psc[, test.psc$plot.num == "1"]
test.psc1 <- test.psc[test.psc$plot.num == "1",]
test.psc2 <- test.psc[test.psc$plot.num == "2",]
test.psc$Site <- gsub("Plot1|Plot2", "", test.psc$Site)
test.psc$Site <- gsub("Plot 1|Plot 2", "", test.psc$Site)
test.psc$Site <- gsub(pattern = "Plot 1|Plot 2", "", test.psc$Site)
test.psc$Site <- gsub(pattern = "Plot 1|Plot 2",
replacement ="",
test.psc$Plot)
test.psc <- art.psc[,c("Site", "art.plot", "art.psc")]
test.psc$plot.num <-gsub(".*Plot", "", test.psc$art.plot)
test.psc$plot.num <- rm_white(test.psc$plot.num)
test.psc$Site <- gsub(pattern = "Plot 1|Plot 2",
replacement ="",
test.psc$Plot)
test.psc$site.new <- gsub(pattern = "Plot 1|Plot 2",
replacement ="",
test.psc$Plot)
gsub(pattern = "Plot 1|Plot 2",
replacement ="",
test.psc$Plot)
test.psc$site.new <- gsub(pattern = "Plot 1|Plot 2",
replacement ="",
test.psc$art.plot)
unique(test.psc$site.new)
test.psc1 <- test.psc[test.psc$plot.num == "1",]
test.psc2 <- test.psc[test.psc$plot.num == "2",]
merge(test.psc1, test.psc2, by = "site.new")
test2 <- merge(test.psc1, test.psc2, by = "site.new")
View(test2)
test2 <- merge(test.psc1, test.psc2, by = c("Site","site.new")
test2 <- merge(test.psc1, test.psc2, by = c("Site","site.new"))
test2 <- merge(test.psc1, test.psc2, by = c("Site","site.new"))
test2 <- merge(test.psc1, test.psc2,
by = c("Site","site.new"))[,c("Site", "art.plot.x", "art.psc.x",
"art.plot.y", "art.psc.y")]
table(test2[c("art.psc.x", "art.psc.y")])
test.matrix <- as.matrix(table(test2[c("art.psc.x", "art.psc.y")]))
test.kappa <- cohen.kappa(test.matrix)
psc.pair$Site<- gsub(pattern = "Plot 1|Plot 2",
replacement ="",
psc.pair$art.plot)
psc.pair <- art.psc
psc.pair$plot.num <-gsub(".*Plot", "", psc.pair$art.plot)
psc.pair$plot.num <- rm_white(psc.pair$plot.num)
psc.pair$Site<- gsub(pattern = "Plot 1|Plot 2",
replacement ="",
psc.pair$art.plot)
psc.pair1 <- psc.pair[psc.pair$plot.num == "1",]
psc.pair2 <- psc.pair[psc.pair$plot.num == "2",]
psc.pair.wide <- merge(psc.pair1, psc.pair2,
by = c("Site","site.new"))
psc.pair.wide <- merge(psc.pair1, psc.pair2,
by = "Site")
View(psc.pair.wide)
psc.pair.wide <- merge(psc.pair1, psc.pair2,
by = "Site")[,c("Site", "art.plot.x", "art.rock.x", "art.clay.x",
"art.bedrock.x", "art.psc.x", "art.plot.y",
"art.rock.y", "art.clay.y", "art.bedrock.y",
"art.psc.y")]
table(psc.pair.wide[c("art.psc.x", "art.psc.y")])
art.depth <- read.csv("ART.plot.depth.csv")
# field measurements: rock fragment%, horizon depths
art.field <- read.csv("ART.soil.field.csv")
# particle size analysis: sand%, clay%, silt%
art.psa <- read.csv("ART.soil.PSA.csv")
# combining site name and plot number into one column called "Plot"
art.psa <- unite(art.psa, col="Plot", 1:2, sep=" ")
# renaming columns so that particle size %s are capitalized (required format for later function)
colnames(art.psa) <- c("Plot", "Horizon", "sample.wt.g", "SAND", "CLAY", "SILT")
#### CALCULATING CLAY by WEIGHT ####
# removing white space so that the data aggregates to the correct number of plots
art.psa$Plot <- rm_white(art.psa$Plot)
# summing all the sample weights (g) from each horizon into a total sample weight from each soil pit
total.samp.wt <- aggregate(data = art.psa, sample.wt.g ~ Plot, sum)
# renaming columns to not mix them up later
colnames(total.samp.wt) <- c("Plot", "total.samp.wt")
# adding total weight to the dataset to later calculate clay by weight %
art.psa <- merge(art.psa, total.samp.wt, by = "Plot")
# weighting clay %s for each horizon by their depth (cm) within the soil pit
art.psa$samp.wt.clay <- (art.psa$sample.wt.g * art.psa$CLAY)/art.psa$total.samp.wt
# renaming Plot names so I don't have multiples on one plot when data is aggregated
art.psa$Plot <- gsub(pattern = "Fed 30-16", replacement = "Federal 30-16", x = art.psa$Plot)
# summing the clay %s of each horizon within a plot
total.clay.wt <- aggregate(data = art.psa, samp.wt.clay ~ Plot, sum)
colnames(total.clay.wt) <- c("Plot", "total.clay.wt")
#### CALCULTING SAND % BY WEIGHT ####
# weighting clay %s for each horizon by their depth (cm) within the soil pit
art.psa$samp.wt.sand <- (art.psa$sample.wt.g * art.psa$SAND)/art.psa$total.samp.wt
# summing the clay %s of each horizon within a plot
total.sand.wt <- aggregate(data = art.psa, samp.wt.sand ~ Plot, sum)
colnames(total.sand.wt) <- c("Plot", "total.sand.wt")
#### CALCULATING ROCK % by VOLUME ####
# removing text within Plot names to prepare for merging later
art.field$Plot <- gsub(pattern = "FR|Well Pad", replacement = "", x = art.field$Plot)
# renaming one plot name so it matches others
art.field$Plot <- gsub(pattern = "Fed 30-16", replacement = "Federal 30-16", x = art.field$Plot)
art.psa$Plot <- gsub(pattern = "Fed 30-16", replacement = "Federal 30-16", x = art.psa$Plot)
# previous removal of text leaves extra white space, getting rid of said white space
art.field$Plot <- rm_white(art.field$Plot)
art.psa$Plot <- rm_white(art.psa$Plot)
# adding soil pit depth from field data
art.soil <- merge(art.psa, art.field, by = c("Plot", "Horizon"))
# removing unnecessary characters from plot names
art.depth$Plot <- gsub(pattern = "FR|Well Pad", replacement = "", x = art.depth$Plot)
# removing additional white space
art.depth$Plot <- rm_white(art.depth$Plot)
# combining all info needed to calculate rock % by volume
art.final <- merge(art.soil, art.depth, by = c("Site", "Plot"))
# renaming column so that it's shorter and less confusing
names(art.final)[names(art.final) == 'Total.Rock.Fragments..vol.'] <- 'hor.rock'
# calculating total (cm) depth of horizons
art.final$hor.depth <- (art.final$Lower.Depth - art.final$Upper.Depth)
# weighting rock % by how much space it took up in the pit
art.final$hor.rock.vol <- (art.final$hor.rock * art.final$hor.depth)/art.final$Total.Soil.Pedon.Depth
# summing all rock %s from all horizons in each plot
total.rock.vol <- aggregate(data = art.final, hor.rock.vol ~ Plot, sum)
# renaming columns to make less confusing
colnames(total.rock.vol) <- c("Plot", "tot.rock.vol")
#### FINAL DATASET for PSC CALCULATION ####
psc <- merge(total.clay.wt, total.rock.vol, by = "Plot")
write.csv(psc.pair.wide, "ART.pair.psc.comparison.csv")
# importing file
# particle size class determinations that were made manually in excel
# based on criteria from  "Keys to Soil Taxonomy"
art.psc <- read.csv("psc.calc.csv")
ref.psc <- read.csv("ref.soil.field_and_PSC.csv")
#### CLEANING DATA ####
# adding site column from cleaned Plot names to art data so that art data
# can later be compared to their reference
art.psc$Site <- gsub(pattern = "Plot 1|Plot 2",
x = art.psc$Plot,
replacement = "")
# removing left over white space from previous phrase removal
art.psc$Site <- rm_white(art.psc$Site)
# renaming columns so that there will only be 11 site names
# (the actual number of references)
art.psc$Site <- gsub(pattern = "A-30-3-101S Rd",
replacement = "A-30-3-101S",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "SDC 7326 Rd",
replacement = "SDC 7326",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "Cath Fed 30 01 Rd",
replacement = "Cath Fed 30 01",
x = art.psc$Site)
# cleaning up Site names so that they can be correctly merged with their ART plots
ref.psc$Site <- gsub(pattern = "[()]|D25 1103|L19 2101|FR",
replacement = "",
x = ref.psc$Site)
# removing extra white space from cleaned site names
ref.psc$Site <- rm_white(ref.psc$Site)
# renaminb columns so it's not confusing after merge
colnames(ref.psc) <- c("Site", "Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")
colnames(art.psc) <- c("X", "art.plot", "art.rock","art.clay", "art.bedrock",
"art.sand", "art.psc", "Site")
#### COMPARING ART PLOT to REFERENCE ####
# merging reference particle size class data with that of ART plots
# so that they can be compared
psc.tot <- merge(art.psc, ref.psc, by = "Site")[,c("Site", "art.plot", "art.clay",
"art.bedrock", "art.rock","art.psc",
"Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")]
write.csv(psc.tot, "psc.comparison.csv")
# agreement table between ART plots and their reference based on psc
table(x = psc.tot[c("art.psc", "ref.psc")])
#### COMPARING ART PLOT PAIRS ####
# creating dataframe for art plot pairs (share the same reclamation and reference)
psc.pair <- art.psc
# removing characters in plot name just to have the plot numbers
psc.pair$plot.num <-gsub(".*Plot", "", psc.pair$art.plot)
# removing excess white space for previous clean
psc.pair$plot.num <- rm_white(psc.pair$plot.num)
# renaming sites so that there will be 14 different reclamation for 14 pairs
# otherwise there will only be 11 (the number of reference sites)
psc.pair$Site<- gsub(pattern = "Plot 1|Plot 2",
replacement ="",
psc.pair$art.plot)
# separating plot pairs so that they can later be combined in a wide database
psc.pair1 <- psc.pair[psc.pair$plot.num == "1",]
psc.pair2 <- psc.pair[psc.pair$plot.num == "2",]
# merging plot pairs so that their data is side by side for comparison
psc.pair.wide <- merge(psc.pair1, psc.pair2,
by = "Site")[,c("Site", "art.plot.x", "art.rock.x", "art.clay.x",
"art.bedrock.x", "art.psc.x", "art.plot.y",
"art.rock.y", "art.clay.y", "art.bedrock.y",
"art.psc.y")]
# agreement table within plot pairs based on psc
table(psc.pair.wide[c("art.psc.x", "art.psc.y")])
write.csv(psc.pair.wide, "ART.pair.psc.comparison.csv")
library("tidyverse")
library("psych")
library("qdapRegex")
setwd("C:/Users/sfper/Dropbox/DiStefano_WRFO_project/PSA")
View(psc.pair.wide)
psc.pair.wide$art.psc.x == psc.pair.wide$art.psc.y
# agreement table within plot pairs based on psc
table(psc.pair.wide[c("art.psc.x", "art.psc.y")])
# creating T/F column whether psc pairs match
psc.pair.wide$psc.match <- psc.pair.wide$art.psc.x == psc.pair.wide$art.psc.y
table(psc.pair.wide$psc.match)
# creating T/F column when ART plots matched their reference
psc.tot$psc.match <- psc.tot$art.psc == psc.tot$ref.psc
View(psc.tot)
psc.tot$art.psc == psc.tot$ref.psc
## creating T/F column when ART plots matched their reference
# converting columns of interest into characters since they have different levels of factors
psc.tot[,c("art.psc", "ref.psc")] <- as.character(psc.tot[,c("art.psc", "ref.psc")])
# importing file
# particle size class determinations that were made manually in excel
# based on criteria from  "Keys to Soil Taxonomy"
art.psc <- read.csv("psc.calc.csv")
ref.psc <- read.csv("ref.soil.field_and_PSC.csv")
#### CLEANING DATA ####
# adding site column from cleaned Plot names to art data so that art data
# can later be compared to their reference
art.psc$Site <- gsub(pattern = "Plot 1|Plot 2",
x = art.psc$Plot,
replacement = "")
# removing left over white space from previous phrase removal
art.psc$Site <- rm_white(art.psc$Site)
# renaming columns so that there will only be 11 site names
# (the actual number of references)
art.psc$Site <- gsub(pattern = "A-30-3-101S Rd",
replacement = "A-30-3-101S",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "SDC 7326 Rd",
replacement = "SDC 7326",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "Cath Fed 30 01 Rd",
replacement = "Cath Fed 30 01",
x = art.psc$Site)
# cleaning up Site names so that they can be correctly merged with their ART plots
ref.psc$Site <- gsub(pattern = "[()]|D25 1103|L19 2101|FR",
replacement = "",
x = ref.psc$Site)
# removing extra white space from cleaned site names
ref.psc$Site <- rm_white(ref.psc$Site)
# renaminb columns so it's not confusing after merge
colnames(ref.psc) <- c("Site", "Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")
colnames(art.psc) <- c("X", "art.plot", "art.rock","art.clay", "art.bedrock",
"art.sand", "art.psc", "Site")
#### COMPARING ART PLOT to REFERENCE ####
# merging reference particle size class data with that of ART plots
# so that they can be compared
psc.tot <- merge(art.psc, ref.psc, by = "Site")[,c("Site", "art.plot", "art.clay",
"art.bedrock", "art.rock","art.psc",
"Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")]
psc.tot["art.psc"]
## creating T/F column when ART plots matched their reference
# converting columns of interest into characters since they have different levels of factors
psc.tot["art.psc"] <- as.character(psc.tot["art.psc"])
# importing file
# particle size class determinations that were made manually in excel
# based on criteria from  "Keys to Soil Taxonomy"
art.psc <- read.csv("psc.calc.csv")
ref.psc <- read.csv("ref.soil.field_and_PSC.csv")
#### CLEANING DATA ####
# adding site column from cleaned Plot names to art data so that art data
# can later be compared to their reference
art.psc$Site <- gsub(pattern = "Plot 1|Plot 2",
x = art.psc$Plot,
replacement = "")
# removing left over white space from previous phrase removal
art.psc$Site <- rm_white(art.psc$Site)
# renaming columns so that there will only be 11 site names
# (the actual number of references)
art.psc$Site <- gsub(pattern = "A-30-3-101S Rd",
replacement = "A-30-3-101S",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "SDC 7326 Rd",
replacement = "SDC 7326",
x = art.psc$Site)
art.psc$Site <- gsub(pattern = "Cath Fed 30 01 Rd",
replacement = "Cath Fed 30 01",
x = art.psc$Site)
# cleaning up Site names so that they can be correctly merged with their ART plots
ref.psc$Site <- gsub(pattern = "[()]|D25 1103|L19 2101|FR",
replacement = "",
x = ref.psc$Site)
# removing extra white space from cleaned site names
ref.psc$Site <- rm_white(ref.psc$Site)
# renaminb columns so it's not confusing after merge
colnames(ref.psc) <- c("Site", "Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")
colnames(art.psc) <- c("X", "art.plot", "art.rock","art.clay", "art.bedrock",
"art.sand", "art.psc", "Site")
#### COMPARING ART PLOT to REFERENCE ####
# merging reference particle size class data with that of ART plots
# so that they can be compared
psc.tot <- merge(art.psc, ref.psc, by = "Site")[,c("Site", "art.plot", "art.clay",
"art.bedrock", "art.rock","art.psc",
"Reference", "ref.bedrock", "ref.rock",
"ref.clay", "ref.psc")]
psc.test <- psc.tot
psc.test$psc.match <- ifelse(as.character(psc.test$art.psc) == as.character(psc.test$ref.psc))
psc.test$psc.match <- ifelse(as.character(psc.test$art.psc) == as.character(psc.test$ref.psc), 1, 0)
View(psc.test)
psc.test$psc.match <- ifelse(as.character(psc.test$art.psc) == as.character(psc.test$ref.psc), "match", "no match")
# creating column when ART plots matched their reference
psc.tot$psc.match <- ifelse(as.character(psc.tot$art.psc) == as.character(psc.tot$ref.psc),
"match", "no match")
# agreement table between ART plots and their reference based on psc
table(x = psc.tot[c("art.psc", "ref.psc")])
# agreement table within plot pairs based on psc
table(psc.pair.wide[c("art.psc.x", "art.psc.y")])
rm(psc.test)
View(psc.pair.wide)
table(psc.pair.wide$psc.match)
cohen.kappa(psc.pair.wide[c("art.psc.x", "art.psc.y")])
install.packages("ksb")
install.packages("fmsb")
library(fmsb)
kappa.test(psc.pair.wide$art.psc.x, psc.pair.wide$art.psc.y)
Kappa.test(psc.pair.wide$art.psc.x, psc.pair.wide$art.psc.y)
install.packages("DescTools")
library(DescTools)
CohenKappa(psc.pair.wide$art.psc.x, psc.pair.wide$art.psc.y)
CohenKappa(psc.pair.wide$art.psc.x, psc.pair.wide$art.psc.y, "Unweighted")
CohenKappa(psc.tot$art.psc, psc.tot$ref.psc, "Unweighted")
View(psc.tot)
table(psc.tot$art.psc)
library(DescTools)
Kappa.test(psc.pair.wide$art.psc.x, psc.pair.wide$art.psc.y)
library(fmsb)
Kappa.test(psc.pair.wide$art.psc.x, psc.pair.wide$art.psc.y)
CohenKappa(psc.pair.wide$art.psc.x, psc.pair.wide$art.psc.y, "Unweighted")
CohenKappa(psc.tot$art.psc, psc.tot$ref.psc, "Unweighted")
install.packages("soilphysics")
View(psc.pair)
View(psc.tot)
psc.tot$bedrock.diff <- abs(psc.tot$art.bedrock - psc.tot$ref.bedrock)
table(psc.tot$bedrock.diff)
psc.tot$rock.diff <- abs(psc.tot$art.rock - psc.tot$ref.rock)
table(psc.tot$rock.diff)
mean(psc.tot$bedrock.diff)
median(psc.tot$bedrock.diff)
stderr(psc.tot$bedrock.diff)
std.error(psc.tot$bedrock.diff)
install.packages("plotrix")
library("plotrix")
std.error(psc.tot$bedrock.diff)
mean(psc.tot$rock.diff)
median(psc.tot$rock.diff)
std.error(psc.tot$rock.diff)
